from flask import Blueprint, render_template, request, session
from app import load_news, load_categories, load_icons

app = None
news_blocks_bp = None

def init(flask_app):
    global app, news_blocks_bp
    app = flask_app
    news_blocks_bp = Blueprint('news_blocks', __name__)
    print("–ü–ª–∞–≥–∏–Ω news_blocks –∑–∞–≥—Ä—É–∂–µ–Ω")

    @news_blocks_bp.route('/')
    def enhanced_index():
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        news_list = load_news()
        if not session.get('admin'):
            news_list = [news for news in news_list if not news.get('hidden', False)]
        theme = session.get('theme', 'dark')
        categories = load_categories()

        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ icons —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∫–ª—é—á–∏
        default_icons = {
            "category": {"emoji": "üìÅ", "custom": None},
            "android": {"emoji": "ü§ñ", "custom": None},
            "version": {"emoji": "üÜî", "custom": None},
            "modification": {"emoji": "üîë", "custom": None},
            "settings": {"emoji": "‚öôÔ∏è", "custom": None},
            "closed": {"emoji": "üîí", "custom": None},
            "hidden": {"emoji": "üï∂Ô∏è", "custom": None},
            "views": {"emoji": "üëÅÔ∏è", "custom": None},
            "light_theme": {"emoji": "‚òÄÔ∏è", "custom": None},
            "dark_theme": {"emoji": "üåô", "custom": None},
            "date": {"emoji": "üóìÔ∏è", "custom": None}
        }
        icons = load_icons()
        for key, value in default_icons.items():
            if key not in icons:
                icons[key] = value

        linkify_func = app.jinja_env.filters.get('linkify', lambda x: x)

        # –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏
        block_styles = """
        <style>
            /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –±–ª–æ–∫–æ–≤ */
            section {
                max-width: 1200px;
                margin: 0 auto;
                box-sizing: border-box;
                display: flex;
                flex-wrap: wrap;
                justify-content: center;
            }
            .news-item {
                display: inline-block;
                width: 100%; /* –†–∞—Å—Ç—è–Ω—É—Ç–æ –¥–æ –∫—Ä–∞—ë–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
                margin: 15px;
                padding: 20px;
                background: #f0f0f0;
                border-radius: 10px;
                box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
                vertical-align: top;
                transition: transform 0.2s, box-shadow 0.2s;
                cursor: pointer;
            }
            .news-item:hover {
                transform: translateY(-10px);
                box-shadow: 0 12px 25px rgba(0, 0, 0, 0.5);
            }
            /* –£–ª—É—á—à–µ–Ω–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Ç—ë–º–Ω–æ–π —Ç–µ–º–µ */
            [data-theme="dark"] .news-item {
                background: #444;
                box-shadow: 0 8px 20px rgba(255, 255, 255, 0.1);
            }
            [data-theme="dark"] .news-item:hover {
                box-shadow: 0 12px 30px rgba(255, 255, 255, 0.2);
            }
            .news-item .news-image {
                width: 100%;
                height: 180px;
                object-fit: contain; /* –ò–∑–º–µ–Ω–µ–Ω–æ —Å cover –Ω–∞ contain */
                border-radius: 6px;
            }
            .news-item .news-header {
                margin-bottom: 10px;
            }
            .news-item .news-date {
                display: block;
                margin-top: 2px;
                font-size: 0.9em;
                background-color: rgba(0, 0, 0, 0.1); /* –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω */
                padding: 5px 10px;
                border-radius: 5px;
                display: inline-block; /* –ß—Ç–æ–±—ã —Ñ–æ–Ω –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–ª—Å—è –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É */
                color: #333333; /* –¢—ë–º–Ω–æ-—Å–µ—Ä—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –±–µ–ª–æ–π —Ç–µ–º—ã */
            }
            [data-theme="dark"] .news-item .news-date {
                background-color: rgba(255, 255, 255, 0.1); /* –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω –¥–ª—è —Ç—ë–º–Ω–æ–π —Ç–µ–º—ã */
                color: white; /* –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ç—ë–º–Ω–æ–π —Ç–µ–º—ã */
            }
            .news-item .news-header h3 {
                font-size: 1.2em;
                margin: 12px 0;
                color: #007bff;
            }
            .news-item .news-header h3 a {
                color: inherit;
                text-decoration: none;
            }
            .news-item p {
                font-size: 0.95em;
                color: var(--text-color, #333);
            }
            [data-theme="dark"] .news-item p {
                color: var(--text-color, #ccc);
            }
            @media (max-width: 600px) {
                .news-item {
                    max-width: 100%;
                    margin: 15px 0;
                }
            }
        </style>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                document.querySelectorAll('.news-item').forEach(function(item) {
                    // –î–µ–ª–∞–µ–º –±–ª–æ–∫–∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏
                    item.addEventListener('click', function(event) {
                        if (!event.target.closest('.like-btn, .dislike-btn, .news-actions, .admin-actions')) {
                            const link = item.querySelector('.news-link');
                            if (link) {
                                window.location.href = link.getAttribute('href');
                            }
                        }
                    });

                    // –ü–µ—Ä–µ–Ω–æ—Å–∏–º –¥–∞—Ç—É –≤–Ω–∏–∑ –ø–æ–¥ –ª–∞–π–∫–∏
                    const date = item.querySelector('.news-date');
                    const likes = item.querySelector('.likes');
                    if (date && likes) {
                        likes.insertAdjacentElement('afterend', date);
                    }
                });
            });
        </script>
        """

        return render_template('index.html', news_list=news_list, linkify=linkify_func, client_ip=request.remote_addr, theme=theme, categories=categories, icons=icons, use_blocks=True, block_styles=block_styles)

    app.register_blueprint(news_blocks_bp, url_prefix='')